<%- include('partials/header') %>
<main class="container">
  <div class="card map-container">
    <h2>Carte des cuillères</h2>
    <!-- FORMULAIRE DE FILTRES -->
    <form action="/map" method="GET" class="filter-bar" style="margin-bottom:16px;display:flex;gap:8px;">
      <input type="text" name="user" placeholder="Filtrer par utilisateur" value="<%= typeof user !== 'undefined' ? user : '' %>">
      <input type="text" name="lieu" placeholder="Filtrer par lieu" value="<%= typeof lieu !== 'undefined' ? lieu : '' %>">
      <input type="number" name="minlikes" min="0" placeholder="Likes min" value="<%= typeof minlikes !== 'undefined' ? minlikes : '' %>">
      <button type="submit"><i class="fas fa-filter"></i> Filtrer</button>
    </form>
    <p>Découvrez où les cuillères ont été trouvées dans le monde</p>
    <div id="map" style="height:400px; border-radius:8px; margin-bottom: 10px;"></div>
    <div id="no-marker-warning" style="display:none;color:#e74c3c;text-align:center;margin-top:15px;">
      Aucun post géolocalisé à afficher. Ajoutez une cuillère avec coordonnées pour la voir sur la carte !
    </div>
  </div>
</main>
<%- include('partials/footer') %>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"/>
<style>
.leaflet-popup-content img {
  height: 180px !important;
  width: auto !important;
  display: block;
  margin: 0 auto;
  object-fit: contain;
}
/* Carousel styles for popup */
.carousel {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  width: 220px;
  height: 180px;
  overflow: hidden;
  margin: 0 auto 8px auto;
}
.carousel-images img {
  display: none;
  max-width: 100%;
  max-height: 100%;
  margin: 0 auto;
}
.carousel-images img.active {
  display: block;
}
.carousel-prev, .carousel-next {
  background: rgba(0,0,0,0.4);
  color: #fff;
  border: none;
  font-size: 1.5em;
  width: 32px;
  height: 32px;
  cursor: pointer;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 2;
  border-radius: 50%;
}
.carousel-prev { left: 2px; }
.carousel-next { right: 2px; }
</style>
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script>
  const posts = <%- posts %>;
  const map = L.map('map').setView([46.6, 2.5], 5);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; OpenStreetMap contributors'
  }).addTo(map);

  let markerCount = 0;
  posts.forEach(post => {
    if (
      post.location &&
      post.location.coordinates &&
      typeof post.location.coordinates.lat === "number" &&
      typeof post.location.coordinates.lng === "number" &&
      !isNaN(post.location.coordinates.lat) &&
      !isNaN(post.location.coordinates.lng)
    ) {
      markerCount++;
      // Génération du carrousel HTML
      let imagesHtml = '';
      if (post.images && post.images.length > 0) {
        imagesHtml += `
          <div class="carousel" data-post="${post._id}">
            <button class="carousel-prev" type="button" onclick="prevSlide('${post._id}')">&#8249;</button>
            <div class="carousel-images">
              ${post.images.map((img, idx) =>
                `<img src="${img}" alt="Image du post" class="carousel-image${idx===0?' active':''}" data-idx="${idx}">`
              ).join('')}
            </div>
            <button class="carousel-next" type="button" onclick="nextSlide('${post._id}')">&#8250;</button>
          </div>
        `;
      }
      const popupContent = `
        <b>${post.userId.username}</b><br>
        ${post.location.name ? `<i>${post.location.name}</i><br>` : ''}
        ${imagesHtml}
        <div>${post.caption || ""}</div>
      `;
      L.marker([post.location.coordinates.lat, post.location.coordinates.lng]).addTo(map)
        .bindPopup(popupContent);
    }
  });
  if (markerCount === 0) {
    document.getElementById('no-marker-warning').style.display = 'block';
  }

  // Carousel logic for popups
  function nextSlide(postId) {
    const carousel = document.querySelector('.carousel[data-post="'+postId+'"]');
    if (!carousel) return;
    const images = carousel.querySelectorAll('.carousel-image');
    let current = Array.from(images).findIndex(img => img.classList.contains('active'));
    if(current === -1) current = 0;
    images[current].classList.remove('active');
    let next = (current + 1) % images.length;
    images[next].classList.add('active');
  }
  function prevSlide(postId) {
    const carousel = document.querySelector('.carousel[data-post="'+postId+'"]');
    if (!carousel) return;
    const images = carousel.querySelectorAll('.carousel-image');
    let current = Array.from(images).findIndex(img => img.classList.contains('active'));
    if(current === -1) current = 0;
    images[current].classList.remove('active');
    let prev = (current - 1 + images.length) % images.length;
    images[prev].classList.add('active');
  }

  // Important! Re-bind carousel logic when popup opens (because Leaflet re-renders its DOM)
  map.on('popupopen', function(e) {
    // On popup open, ensure only the first image is active
    const popup = e.popup.getElement();
    if(popup) {
      const carousels = popup.querySelectorAll('.carousel');
      carousels.forEach(carousel => {
        const images = carousel.querySelectorAll('.carousel-image');
        images.forEach((img, idx) => img.classList.toggle('active', idx === 0));
      });
    }
  });
</script>
